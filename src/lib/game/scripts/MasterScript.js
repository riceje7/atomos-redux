ig.module('game.scripts.MasterScript').requires('impact.game', 'impact.background-map').defines(function () {
	ig.BackgroundMap.inject({
		setScreenPos: function (x, y) {
			this.scroll.x = x / this.distance;
			this.scroll.y = y;
		}
	});
	ig.Game.inject({
		checkConsole: function () {
			var enabled = ig.game.player.data.powerups.consolePU;
			if (enabled) {
				ig.game.jqconsole.Enable();
				return true;
			} else {
				ig.game.jqconsole.Disable();
				return false;
			}
		},
		promptUser: function (callback) {
				sandbox.model.prompt = true;
		},
		saveProgress: function () {
			if (ig.game.storage) {
				var nextLevel = gbl_userName + '-nextLevel';
				var powerups = gbl_userName + '-powerups';
				var coins = gbl_userName + '-coins';
				var kills = gbl_userName + '-kills';
				var lives = gbl_userName + '-lives';
				var maxEnergy = gbl_userName + '-maxEnergy';
				var maxHealth = gbl_userName + '-maxHealth';
				var levelHighscores = gbl_userName + '-levelHighscores';
				var aggScore = gbl_userName + '-aggScore';
				ig.game.storage.setHighest(nextLevel, ig.game.currentLevel);
				ig.game.storage.set(powerups, ig.game.player.data.powerups);
				ig.game.storage.setHighest(coins, ig.game.player.data.coins);
				ig.game.storage.setHighest(kills, ig.game.player.data.kills);
				ig.game.storage.set(lives, ig.game.player.data.lives);
				ig.game.storage.setHighest(maxEnergy, ig.game.player.data.maxEnergy);
				ig.game.storage.setHighest(maxHealth, ig.game.player.data.maxHealth);
				ig.game.storage.set(levelHighscores, ig.game.player.data.levelHighscores);
				ig.game.storage.setHighest(aggScore, ig.game.player.data.aggScore);
				$.ajax({
					async: false,
					type: "POST",
					url: "./php/saveprogress.php",
					dataType: "JSON",
					data: {
						'user': gbl_userName,
						'data': $.toJSON({
							nextLevel: ig.game.storage.getInt(nextLevel),
							powerups: ig.game.storage.get(powerups),
							coins: ig.game.storage.getInt(coins),
							kills: ig.game.storage.getInt(kills),
							lives: ig.game.storage.getInt(lives),
							maxEnergy: ig.game.storage.getInt(maxEnergy),
							maxHealth: ig.game.storage.getInt(maxHealth),
							levelHighscores: ig.game.storage.get(levelHighscores),
							aggScore: ig.game.storage.getInt(aggScore)
						})
					}
				});
			} else {
				ig.game.storage = new ig.Storage();
				ig.game.saveProgress();
			}
		},
		pauseMenu: function () {
			$.confirm({
				'title': 'Paused',
				'message': "You have paused the game, press 'Continue' to unpause the game, or choose another option below.",
				'buttons': {
					'Continue': {
						'class': 'blue',
						'action': function () {
							ig.game.paused = false;
							ig.system.startRunLoop();
							ig.music.play();
						}
					},
					'Save Game': {
						'class': 'blue',
						'action': function () {
							ig.game.saveProgress();
							$.confirm({
								'title': "Game Saved",
								'message': "Your progress has been saved, click 'Continue' to keep playing, or 'Quit Game' to return to the title screen.",
								'buttons': {
									'Continue': {
										'class': 'blue',
										'action': function () {
											ig.game.paused = false;
											ig.system.startRunLoop();
											ig.music.play();
										}
									},
									'Quit Game': {
										'class': 'gray',
										'action': function () {
											window.location = "./index.html";
										}
									}
								}
							});
						}
					},
					'Credits': {
						'class': 'gray',
						'action': function () {
							var message = "<div id='dialog-message' title='Credits'><p>Proundly built using ImpactJS<br/>www.impactjs.com<br/><br/>::Game Design & Development::<br/>Joe Rice<br/><br/>::Graphics::<br/> Joe Rice et al.<br/><br/>::Music::<br/>--Eric Skiff--<br/>Level 0: A Night of Dizzy Spells<br/>Level 1: Chibi Ninja<br/>Level 2: We're the Resistors<br/>Level 3: Arpanauts<br/><br/>::SFX::<br/>Generated by Joe Rice at http://www.bfxr.net/<br/><br/>::Tools::<br/>Coda 2<br/>http://www.bfxr.net/<br/>Adobe Photoshop<br/>MAMP Pro<br/><br/>::Tech::<br/>jQuery & jQuery-UI<br/>jQuery.confirm.js by Martin Angelov<br/>jQuery.JSON by Brantley Harris<br/>jQ-Console<br/>ImpactJS Engine developed by Dominic Szablewski</p></div>";
							$(message).appendTo('body').fadeIn();
							$(function () {
								$("#dialog-message").dialog({
									modal: true,
									buttons: {
										Back: function () {
											$(this).dialog("close");
											$('#dialog-message').remove();
											ig.game.pauseMenu();
										}
									}
								});
							});


						}
					},
					'Quit Game': {
						'class': 'gray',
						'action': function () {
							$.confirm({
								'title': "Confirm Quit Game",
								'message': "Are you sure you want to quit? Any unsaved progress will be lost.",
								'buttons': {
									'Quit Game': {
										'class': 'gray',
										'action': function () {
											window.location = "./index.html";
										}
									},
									'Cancel': {
										'class': 'blue',
										'action': function () {
											ig.game.pauseMenu();
										}
									}
								}
							});
						}
					}
				}
			});
		},
		nextmsg: function () {
			var overlay = ig.game.getEntitiesByType('EntityOverlay')[0];
			if (overlay.msgsArr.length > 1) {
				var num = overlay.msgCounter + 1;
				if (num < overlay.msgsArr.length) {
					overlay.setMessage({
						status: true,
						message: overlay.msgsArr[num],
						counterOut: num
					});
				} else {
					num -= overlay.msgsArr.length;
					overlay.setMessage({
						status: true,
						message: overlay.msgsArr[num],
						counterOut: num
					});
				}
			}
		},
		prevmsg: function () {
			var overlay = ig.game.getEntitiesByType('EntityOverlay')[0];
			if (overlay.msgsArr.length > 1) {
				var num = overlay.msgCounter - 1;
				if (num >= 0) {
					overlay.setMessage({
						status: true,
						message: overlay.msgsArr[num],
						counterOut: num
					});
				} else {
					num += overlay.msgsArr.length - 1;
					overlay.setMessage({
						status: true,
						message: overlay.msgsArr[num],
						counterOut: num
					});
				}
			}
		}

	});
});